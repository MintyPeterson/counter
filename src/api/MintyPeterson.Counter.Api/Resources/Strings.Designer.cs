//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MintyPeterson.Counter.Api.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MintyPeterson.Counter.Api.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter.
        /// </summary>
        internal static string DefaultProductName {
            get {
                return ResourceManager.GetString("DefaultProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string DefaultProductVersion {
            get {
                return ResourceManager.GetString("DefaultProductVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entry.
        /// </summary>
        internal static string Entry {
            get {
                return ResourceManager.GetString("Entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EntryDate.
        /// </summary>
        internal static string EntryDate {
            get {
                return ResourceManager.GetString("EntryDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry date parameter is required..
        /// </summary>
        internal static string EntryDateParameterRequired {
            get {
                return ResourceManager.GetString("EntryDateParameterRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry identifier parameter is required..
        /// </summary>
        internal static string EntryIdentifierParameterRequired {
            get {
                return ResourceManager.GetString("EntryIdentifierParameterRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry could not be created..
        /// </summary>
        internal static string EntryNotCreated {
            get {
                return ResourceManager.GetString("EntryNotCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry could not be deleted..
        /// </summary>
        internal static string EntryNotDeleted {
            get {
                return ResourceManager.GetString("EntryNotDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry could not be found..
        /// </summary>
        internal static string EntryNotFound {
            get {
                return ResourceManager.GetString("EntryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry could not be updated..
        /// </summary>
        internal static string EntryNotUpdated {
            get {
                return ResourceManager.GetString("EntryNotUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry parameter should be a whole number in the range -99999 to 99999..
        /// </summary>
        internal static string EntryParameterOutOfRange {
            get {
                return ResourceManager.GetString("EntryParameterOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry parameter is required..
        /// </summary>
        internal static string EntryParameterRequired {
            get {
                return ResourceManager.GetString("EntryParameterRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter value is not valid..
        /// </summary>
        internal static string PropertyValueInvalid {
            get {
                return ResourceManager.GetString("PropertyValueInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the request is not valid. Please see https://github.com/mintypeterson/counter..
        /// </summary>
        internal static string RequestNotValid {
            get {
                return ResourceManager.GetString("RequestNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information, please see https://github.com/mintypeterson/counter..
        /// </summary>
        internal static string SupportInformation {
            get {
                return ResourceManager.GetString("SupportInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User.
        /// </summary>
        internal static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user could not be synchronised..
        /// </summary>
        internal static string UserNotSynchronised {
            get {
                return ResourceManager.GetString("UserNotSynchronised", resourceCulture);
            }
        }
    }
}
